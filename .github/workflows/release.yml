# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push with a tag
  push:
    tags:
      - "v*"
  # nightly
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 23 * * *"

  # Triggers on creation of a release
  # release:
  #     types:
  #         - created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote
      - uses: actions/setup-node@master
        with:
          node-version: 16
      - name: Install dependencies
        run: cd ./chaiNNer && npm ci --force
      - name: Install necessary FlatPak tools
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update && sudo apt install flatpak flatpak-builder elfutils
      - name: Build nightly release
        run: cd ./chaiNNer && npm run make
      - name: Set file name env vars
        id: step_one
        run: |
          echo "ZIP=$(find ./chaiNNer/out/make/ -iname *.zip)" >> $GITHUB_ENV
          echo "DMG=$(find ./chaiNNer/out/make/ -iname *.dmg)" >> $GITHUB_ENV
          echo "DEB=$(find ./chaiNNer/out/make/ -iname *.deb)" >> $GITHUB_ENV
          echo "RPM=$(find ./chaiNNer/out/make/ -iname *.rpm)" >> $GITHUB_ENV
          echo "EXE=$(find ./chaiNNer/out/make/ -iname *.exe)" >> $GITHUB_ENV
          echo "NUPKG=$(find ./chaiNNer/out/make/ -iname *.nupkg)" >> $GITHUB_ENV
      - name: Rename zip assets
        if: ${{ env.ZIP }}
        run: mv ${{ env.ZIP }} ./chaiNNer/out/make/chaiNNer-${{ matrix.os }}-${{ github.event.repository.updated_at }}.zip
      - name: Rename dmg assets
        if: ${{ env.DMG }}
        run: mv ${{ env.DMG }} ./chaiNNer/out/make/chaiNNer-${{ matrix.os }}-${{ github.event.repository.updated_at }}.dmg
      - name: Rename deb assets
        if: ${{ env.DEB }}
        run: mv ${{ env.DEB }} ./chaiNNer/out/make/chaiNNer-${{ matrix.os }}-${{ github.event.repository.updated_at }}.deb
      - name: Rename rpm assets
        if: ${{ env.RPM }}
        run: mv ${{ env.RPM }} ./chaiNNer/out/make/chaiNNer-${{ matrix.os }}-${{ github.event.repository.updated_at }}.rpm
      - name: Rename exe assets
        if: ${{ env.EXE }}
        run: mv ${{ env.EXE }} ./chaiNNer/out/make/chaiNNer-${{ matrix.os }}-${{ github.event.repository.updated_at }}.exe
      - name: Delete nupkg assets
        if: ${{ env.NUPKG }}
        run: rm ${{ env.NUPKG }}
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: nightly
          assets: "*.*"
      - name: Upload new release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./chaiNNer/out/make/**
          tag: nightly
          overwrite: true
          body: Built on ${{ github.event.repository.updated_at }}
          release_name: chaiNNer Nightly ${{ github.event.repository.updated_at }}
          prerelease: true
